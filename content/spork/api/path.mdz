(import ../../gen-docs :as gen-docs)
(import spork/path :export true)
(setdyn :source-linker (partial gen-docs/github-source-linker "janet-lang/spork" gen-docs/spork-version))
(setdyn :no-community-examples true)

{:title "path"
 :author "Calvin Rose"
 :license "MIT"
 :template "docpage.html"}
---

Simple path manipulation module for Janet. Supports manipulation both
windows and posix paths on any platform, and provides functions that
work according to the current host platform.

All functions have three forms, under @code`path`, @code`path/win`, and
@code`path/posix`. The prefix indicates which type of path the function
manipulates.

## Example

@codeblock[janet]```

(import spork/path)

# Examples for a non-windows system, use path/win/ for windows and
# path/posix/ for posix.

(path/ext "my/long/path.txt") # -> ".txt"
path/sep # -> "/" on posix, "\\" on windows
path/delim # -> ":" on posix, ";" on windows
(path/basename "some/path.txt") # -> "path.txt"
(path/dirname "some/path.txt") # -> "some/"
(path/parts "some/path/file.txt") # -> ["some" "path" "file.txt"]
(path/normalize "some/.././thing/file.txt") # -> "thing/file.txt"
(path/join "some/path" "../thing/file.txt") # -> "some/thing/file.txt"
(path/abspath? "/home/blah") # -> true
(path/abspath "file.txt") # -> "/home/me/cwd/file.txt"
(path/relpath
  "a/nested/directory/with/a/few/children"
  "a/nested/directory/with/different/children") # -> "../../../different/children"
```

## Reference

@gen-docs/gen-prefix-current[path/]
